class Crypto {
    /*  
        @returns base64 encoded 256bit secret key 
    */
    static generateKey256(){
        return require('crypto').randomBytes(64).toString('base64').replaceAll('=','');
    }

    /*  
        @param target
            - data: json string
            - secretKey: generated by generateKey256()
    */
    static createHmacSha256(target){
        return require('crypto').createHmac('sha256', target.secretKey).update(JSON.stringify(target.data)).digest('hex');
    }
}

class JsonRpcRequester {
    #baseURL
    #axios

    constructor(baseURL) {
        this.#baseURL = baseURL;
        this.#axios = require('axios').create({baseURL});
    }

    get baseURL() {
        return this.#baseURL
    }

    /*  
        method:string;
        params?:string[];
        id?:number;
    */
    async request(req) {
        const body = { jsonrpc: '2.0', ...req}
        return (await this.#axios.post("/", body)).data
    }
}

class ModuleArguments {

    #argSet

    constructor(){
        this.#argSet = {}
    }

    option(opt){
        
    }
}

module.exports = {
    Crypto,
    JsonRpcRequester
}